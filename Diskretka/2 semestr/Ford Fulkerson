def ford_bellman(graph, start):
    distance = {vertex: float('infinity') for vertex in graph}
    distance[start] = 0

    for _ in range(len(graph) - 1):
        for vertex in graph:
            for neighbor, weight in graph[vertex].items():
                if distance[vertex] + weight < distance[neighbor]:
                    distance[neighbor] = distance[vertex] + weight

    for vertex in graph:
        for neighbor, weight in graph[vertex].items():
            if distance[vertex] + weight < distance[neighbor]:
                return "The graph contains a negative cycle"

    return distance

# Граф с отрицательным циклом
# graph = {
# '1': {'2': 4, '3': 4},
# '2': {},
# '3': {'5': 4, '6': -2},
# '4': {'1': 3, '3': 2},
# '5': {'4': 1, '7': -2},
# '6': {'2': 3, '5': -3},
# '7': {'6': 2, '8': 2},
# '8': {'5': -2}
# }

graph = {
'1': {'2': 1, '5': 3},
'2': {'3': 8, '4': 7, '5': 1},
'3': {'4': 1, '5': -5},
'4': {'3': 2},
'5': {'4': 4},
}
print("Enter start vertex please😢: ")
start_vertex = input()
print("Distance from vertex", start_vertex)
print(ford_bellman(graph, start_vertex))
