edges = [(15, 1, 2), (14, 1, 5), (23, 1, 4), (19, 2, 3), (16, 2, 4), (15, 2, 5), (14, 3, 5), (26, 3, 6),
         (25, 4, 5), (23, 4, 7), (20, 4, 8), (24, 5, 6), (27, 5, 8), (18, 5, 9), (14, 7, 8), (18, 8, 9)]
edgesSorted = sorted(edges, key=lambda rib: rib[0])
connectedVertices = set()
dictionary = {}
ostov = []

for edge in edgesSorted:
    if edge[1] not in connectedVertices or edge[2] not in connectedVertices:
        if edge[1] not in connectedVertices and edge[2] not in connectedVertices:
            dictionary[edge[1]] = set([edge[1], edge[2]])
            dictionary[edge[2]] = dictionary[edge[1]]
        else:
            if not dictionary.get(edge[1]):
                dictionary[edge[2]].add(edge[1])
                dictionary[edge[1]] = dictionary[edge[2]]
            else:
                dictionary[edge[1]].add(edge[2])
                dictionary[edge[2]] = dictionary[edge[1]]
        ostov.append(edge)
        connectedVertices.add(edge[1])
        connectedVertices.add(edge[2])

for edge in edgesSorted:
    if edge[2] not in dictionary[edge[1]]:
        ostov.append(edge)
        t = dictionary[edge[1]]
        dictionary[edge[1]] = dictionary[edge[1]].union(dictionary[edge[2]])
        dictionary[edge[2]] = dictionary[edge[2]].union(t)
        for graphVertex in dictionary[edge[1]]:
            dictionary[graphVertex] = dictionary[edge[1]]

print(ostov)
